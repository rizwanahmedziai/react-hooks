{"version":3,"file":"static/webpack/static\\development\\pages\\ImageChangeOnScroll.js.dc318617fa356c7b5016.hot-update.js","sources":["webpack:///./src/ImageToggleOnScroll.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst ImageToggleOnScroll = ({ primaryImage, secondaryImage }) => {\r\n\tconst imageRef = useRef(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', scrollHandler);\r\n\t\tsetInView(isInView());\r\n\t\tsetIsLoading(false);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('scroll', scrollHandler);\r\n\t\t};\r\n\t}, [isLoading]);\r\n\r\n\tconst [inView, setInView] = useState(false);\r\n\r\n\tconst isInView = () => {\r\n\t\tif (imageRef.current) {\r\n\t\t\tconst rect = imageRef.current.getBoundingClientRect();\r\n\t\t\treturn rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst scrollHandler = () => {\r\n\t\tsetInView(() => {\r\n\t\t\treturn isInView();\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? null : (\r\n\t\t<img\r\n\t\t\tsrc={inView ? secondaryImage : primaryImage}\r\n\t\t\talt=''\r\n\t\t\tref={imageRef}\r\n\t\t\twidth='300'\r\n\t\t\theight='300'\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ImageToggleOnScroll;\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}