{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\React\\\\pluralsight\\\\using-react-hooks\\\\project\\\\react-hooks\\\\src\\\\ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll(_ref) {\n  var primaryImage = _ref.primaryImage,\n      secondaryImage = _ref.secondaryImage;\n  var imageRef = useRef(null);\n  useEffect(function () {\n    window.addEventListener('scroll', scrollHandler);\n  });\n\n  var _useState = useState(false),\n      isInView = _useState[0],\n      setInView = _useState[1];\n\n  var inInView = function inInView() {\n    if (imageRef.current) {\n      var rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  var scrollHandler = function scrollHandler() {};\n\n  return __jsx(\"img\", {\n    src: primaryImage,\n    alt: \"\",\n    ref: imageRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["F:/Projects/React/pluralsight/using-react-hooks/project/react-hooks/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primaryImage","secondaryImage","imageRef","window","addEventListener","scrollHandler","isInView","setInView","inInView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAsC;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACjE,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,GAFQ,CAAT;;AAHiE,kBAOnCP,QAAQ,CAAC,KAAD,CAP2B;AAAA,MAO1DQ,QAP0D;AAAA,MAOhDC,SAPgD;;AASjE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,QAAIN,QAAQ,CAACO,OAAb,EAAsB;AACrB,UAAMC,IAAI,GAAGR,QAAQ,CAACO,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeV,MAAM,CAACW,WAA9C;AACA;;AACD,WAAO,KAAP;AACA,GAND;;AAQA,MAAMT,aAAa,GAAG,SAAhBA,aAAgB,GAAM,CAAE,CAA9B;;AAEA,SAAO;AAAK,IAAA,GAAG,EAAEL,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAA+B,IAAA,GAAG,EAAEE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CApBD;;AAsBA,eAAeH,mBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst ImageToggleOnScroll = ({ primaryImage, secondaryImage }) => {\r\n\tconst imageRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', scrollHandler);\r\n\t});\r\n\r\n\tconst [isInView, setInView] = useState(false);\r\n\r\n\tconst inInView = () => {\r\n\t\tif (imageRef.current) {\r\n\t\t\tconst rect = imageRef.current.getBoundingClientRect();\r\n\t\t\treturn rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst scrollHandler = () => {};\r\n\r\n\treturn <img src={primaryImage} alt='' ref={imageRef} />;\r\n};\r\n\r\nexport default ImageToggleOnScroll;\r\n"]},"metadata":{},"sourceType":"module"}